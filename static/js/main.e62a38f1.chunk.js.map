{"version":3,"sources":["serviceWorker.ts","db.ts","firebaseConfig.ts","UserContext.ts","auth.ts","components/Home/Home.tsx","components/Login/Login.tsx","components/Signup/Signup.tsx","components/Dashboard/Recipe.tsx","components/Dashboard/RecipeList.tsx","components/Dashboard/Dashboard.tsx","components/Dashboard/CreateRecipe.tsx","components/App/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","log","debug","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","enablePersistence","catch","err","console","error","createEntry","options","collection","add","updatedAt","Timestamp","fromDate","Date","deleteEntry","id","doc","delete","UserContext","React","user","undefined","useSession","useContext","useAuth","useState","currentUser","initializing","state","setState","onChange","useEffect","unsubscribe","onAuthStateChanged","loginWithEmail","email","password","signInWithEmailAndPassword","createUserWithEmail","name","a","createUserWithEmailAndPassword","updateProfile","displayName","signOut","HomePage","props","Button","type","fullWidth","variant","color","component","Link","to","withRouter","setEmail","setPassword","history","replace","alert","message","onSubmit","e","preventDefault","FormControl","margin","required","InputLabel","htmlFor","Input","autoComplete","autoFocus","value","target","onClick","setName","useStyles","makeStyles","theme","card","minWidth","maxWidth","bullet","display","transform","title","fontSize","pos","marginBottom","media","height","paddingTop","expand","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","Recipe","author","ingredients","description","image","classes","expanded","setExpanded","Card","className","CardMedia","CardContent","Typography","gutterBottom","CardActions","disableSpacing","IconButton","aria-expanded","aria-label","Collapse","in","timeout","unmountOnExit","List","dense","map","item","ListItem","key","amount","ListItemText","primary","secondary","RecipeList","useCollectionData","where","uid","orderBy","idField","values","userRecipes","style","flexWrap","length","index","push","setTitle","currentIngredientName","setCurrentIngredientName","currentIngredientAmount","setCurrentIngredientAmount","setIngredients","setDescription","recipeLink","setRecipeLink","handleIngredientActionClick","ingredient","updatedIngredients","filter","addIngredient","removeIngredient","justifyContent","flexDirection","Chip","indexedDB","label","InputBase","placeholder","onDelete","deleteIcon","padding","TextField","multiline","rows","rowsMax","newRecipe","userId","goBack","createMuiTheme","withStyles","main","width","spacing","marginRight","breakpoints","up","paper","marginTop","alignItems","palette","submit","Paper","Avatar","Provider","MuiThemeProvider","CssBaseline","exact","path","Login","Signup","Dashboard","CreateRecipe","CircularProgress","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8NAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gRCXN,IAAMC,EAAMC,IAAM,UAElBC,gBCTe,CACbC,OAAQ,0CACRC,WAAY,+BACZC,YAAa,sCACbC,UAAW,eACXC,cAAe,GACfC,kBAAmB,cACnBC,MAAO,6CDIF,IAAMC,EAAKR,cAElBQ,EAAGC,oBAAoBC,OAAM,SAASC,GACpCC,QAAQC,MAAMF,MAkBT,IAAMG,EAAc,SAACC,GAE1B,OADAjB,EAAI,kBAAmBiB,GAChBP,EAAGQ,WAAW,WAAWC,I,yVAAzB,IACFF,EADE,CAELG,UAAWlB,YAAmBmB,UAAUC,SAAS,IAAIC,UAI5CC,EAAc,SAACC,GAE1B,OADAzB,EAAI,aAAcyB,GACXf,EACJQ,WAAW,WACXQ,IAAID,GACJE,U,kEEtCQC,EAAcC,gBAAiC,CAC1DC,UAAMC,ICFKC,EAAa,WAExB,OADiBC,qBAAWL,GAApBE,MAIGI,EAAU,WAAO,IAAD,EACDL,IAAMM,UAAS,WACvC,IAAML,EAAO5B,SAAgBkC,YAC7B,MAAO,CAAEC,cAAeP,EAAMA,WAHL,mBACpBQ,EADoB,KACbC,EADa,KAM3B,SAASC,EAASV,GAChBS,EAAS,CAAEF,cAAc,EAAOP,SAUlC,OAPAD,IAAMY,WAAU,WAEd,IAAMC,EAAcxC,SAAgByC,mBAAmBH,GAEvD,OAAO,kBAAME,OACZ,IAEIJ,GAGIM,EAAiB,SAACC,EAAeC,GAC5C,IACE,OAAO5C,SAAgB6C,2BAA2BF,EAAOC,GACzD,MAAOjC,GAEP,MADAC,QAAQC,MAAMF,GACRA,IAIGmC,EAAmB,uCAAG,WACjCC,EACAJ,EACAC,GAHiC,SAAAI,EAAA,+EAMzBhD,SAAgBiD,+BAA+BN,EAAOC,GAN7B,gCASxB5C,SAAgBkC,YAAYgB,cAAc,CAC/CC,YAAaJ,KAVgB,sCAa/BnC,QAAQC,MAAR,MAb+B,8DAAH,0DAuBnBuC,EAAU,kBAAMpD,SAAgBoD,W,uFCzD9B,SAASC,EAASC,GAC/B,OACE,oCACE,kBAACC,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNC,UAAWC,IACXC,GAAG,WANL,YAUA,kBAACP,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNC,UAAWC,IACXC,GAAG,UANL,SAUA,kBAACP,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNC,UAAWC,IACXC,GAAG,cANL,c,+BC0CSC,mBAhEf,SAAgBT,GAAQ,IAAD,EACKrB,mBAAS,IADd,mBACdU,EADc,KACPqB,EADO,OAEW/B,mBAAS,IAFpB,mBAEdW,EAFc,KAEJqB,EAFI,iDAIrB,sBAAAjB,EAAA,+EAEUN,EAAeC,EAAOC,GAFhC,OAGIU,EAAMY,QAAQC,QAAQ,cAH1B,+CAKIC,MAAM,KAAMC,SALhB,yDAJqB,sBAarB,OACE,0BAEEC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAAoB,IAErC,kBAACC,EAAA,EAAD,CAAaC,OAAO,SAASC,UAAQ,EAAClB,WAAS,GAC7C,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,SAApB,iBACA,kBAACC,EAAA,EAAD,CACEvD,GAAG,QACHwB,KAAK,QACLgC,aAAa,MACbC,WAAS,EACTC,MAAOtC,EACPL,SAAU,SAAAiC,GAAC,OAAIP,EAASO,EAAEW,OAAOD,WAGrC,kBAACR,EAAA,EAAD,CAAaC,OAAO,SAASC,UAAQ,EAAClB,WAAS,GAC7C,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACC,EAAA,EAAD,CACE/B,KAAK,WACLS,KAAK,WACLjC,GAAG,WACHwD,aAAa,MACbE,MAAOrC,EACPN,SAAU,SAAAiC,GAAC,OAAIN,EAAYM,EAAEW,OAAOD,WAGxC,kBAAC1B,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,UACNwB,QA7Ce,4CAwCjB,WASA,kBAAC5B,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNC,UAAWC,IACXC,GAAG,WANL,cC4BSC,mBA7Ef,SAAgBT,GAAQ,IAAD,EACGrB,mBAAS,IADZ,mBACdc,EADc,KACRqC,EADQ,OAEKnD,mBAAS,IAFd,mBAEdU,EAFc,KAEPqB,EAFO,OAGW/B,mBAAS,IAHpB,mBAGdW,EAHc,KAGJqB,EAHI,iDAKrB,sBAAAjB,EAAA,sDACE,IACEF,EAAoBC,EAAMJ,EAAOC,GACjCU,EAAMY,QAAQC,QAAQ,cACtB,MAAOtD,GACPuD,MAAMvD,EAAMwD,SALhB,4CALqB,sBAcrB,OACE,0BAEEC,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAAoB,IAErC,kBAACC,EAAA,EAAD,CAAaC,OAAO,SAASC,UAAQ,EAAClB,WAAS,GAC7C,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,QAApB,QACA,kBAACC,EAAA,EAAD,CACEvD,GAAG,OACHwB,KAAK,OACLgC,aAAa,MACbC,WAAS,EACTC,MAAOlC,EACPT,SAAU,SAAAiC,GAAC,OAAIa,EAAQb,EAAEW,OAAOD,WAGpC,kBAACR,EAAA,EAAD,CAAaC,OAAO,SAASC,UAAQ,EAAClB,WAAS,GAC7C,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,SAApB,iBACA,kBAACC,EAAA,EAAD,CACEvD,GAAG,QACHwB,KAAK,QACLgC,aAAa,MACbE,MAAOtC,EACPL,SAAU,SAAAiC,GAAC,OAAIP,EAASO,EAAEW,OAAOD,WAGrC,kBAACR,EAAA,EAAD,CAAaC,OAAO,SAASC,UAAQ,EAAClB,WAAS,GAC7C,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACC,EAAA,EAAD,CACE/B,KAAK,WACLS,KAAK,WACLjC,GAAG,WACHwD,aAAa,MACbE,MAAOrC,EACPN,SAAU,SAAAiC,GAAC,OAAIN,EAAYM,EAAEW,OAAOD,WAIxC,kBAAC1B,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,UACNwB,QAzDe,4CAoDjB,UAUA,kBAAC5B,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNC,UAAWC,IACXC,GAAG,UANL,wB,qJClDAuB,GAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,IACVC,SAAU,KAEZC,OAAQ,CACNC,QAAS,eACTlB,OAAQ,QACRmB,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,MAAO,CACLC,OAAQ,EACRC,WAAY,UAEdC,OAAQ,CACNR,UAAW,eACXS,WAAY,OACZC,WAAYhB,EAAMiB,YAAYC,OAAO,YAAa,CAChDC,SAAUnB,EAAMiB,YAAYE,SAASC,YAGzCC,WAAY,CACVf,UAAW,kBAEbgB,OAAQ,CACNC,gBAAiBC,KAAI,UAcV,SAASC,GAAT,GAOE,IANfzF,EAMc,EANdA,GACAuE,EAKc,EALdA,MACAmB,EAIc,EAJdA,OACAC,EAGc,EAHdA,YACAC,EAEc,EAFdA,YACAC,EACc,EADdA,MAEMC,EAAUhC,KADF,EAEkBpD,oBAAS,GAF3B,mBAEPqF,EAFO,KAEGC,EAFH,KAYd,OACE,kBAACC,EAAA,EAAD,CAAMC,UAAWJ,EAAQ7B,MACtB4B,GAAS,kBAACM,EAAA,EAAD,CAAWD,UAAWJ,EAAQnB,MAAOkB,MAAOA,IACtD,kBAACO,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEH,UAAWJ,EAAQvB,MACnBnC,MAAM,gBACNkE,cAAY,GAHd,eAOA,kBAACD,EAAA,EAAD,CAAYlE,QAAQ,KAAKE,UAAU,MAChCkC,IAGL,kBAACgC,EAAA,EAAD,CAAaC,gBAAc,GACzB,kBAACC,GAAA,EAAD,CACEP,UAAWJ,EAAQhB,OACnBlB,QA1BkB,WACxBoC,GAAaD,IA0BPW,gBAAeX,EACfY,aAAW,aAEX,kBAAC,KAAD,OAEF,kBAACF,GAAA,EAAD,CAAYE,aAAW,SAAS/C,QA5BZ,WACxB7D,EAAYC,KA4BN,kBAAC,KAAD,QAGJ,kBAAC4G,GAAA,EAAD,CAAUC,GAAId,EAAUe,QAAQ,OAAOC,eAAa,GAClD,kBAACX,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KAAaX,GACb,kBAACsB,EAAA,EAAD,CAAMC,OAAK,GACRtB,GACCA,EAAYuB,KAAI,SAAAC,GAAI,OAClB,kBAACC,EAAA,EAAD,CAAUC,IAAG,UAAKF,EAAK3F,KAAV,YAAkB2F,EAAKG,SAClC,kBAACC,GAAA,EAAD,CAAcC,QAASL,EAAK3F,KAAMiG,UAAWN,EAAKG,cAK1D,kBAACjB,EAAA,EAAD,KAAaT,MCjHR,SAAS8B,KACtB,IAAMrH,EAAOE,IADsB,EAEFoH,YAC/B1I,EACGQ,WAAW,WAEXmI,MAAM,SAAU,KAAMvH,EAAMwH,KAC5BC,QAAQ,QAAS,OACpB,CAAEC,QAAS,OARsB,mBAE5BC,EAF4B,eAUnC3I,QAAQd,IAAIyJ,GAGZ,IAAMC,EAAqBD,EAC3B,OACE,yBAAKE,MAAO,CAAE7D,QAAS,OAAQ8D,SAAU,SACtCF,GACCA,EAAYG,OAAS,GACrBH,EAAYf,KAAI,SAACC,EAAMkB,GAAP,OACd,kBAAC5C,GAAD,eAAQ4B,IAAKgB,EAAOrI,GAAImH,EAAKnH,GAAIuE,MAAO4C,EAAK5C,OAAW4C,QCqBnD3E,oBA3Cf,SAAmBT,GAIjB,IAFaxB,IAIX,OADAwB,EAAMY,QAAQ2F,KAAK,KACZ,KANoB,4CAS7B,sBAAA7G,EAAA,sEACQI,IADR,OAEEE,EAAMY,QAAQ2F,KAAK,KAFrB,4CAT6B,sBAc7B,OACE,oCACE,kBAACtG,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,UACNG,GAAI,UACJF,UAAWC,KANb,cAWA,kBAACoF,GAAD,MAEA,kBAAC1F,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNwB,QAlCuB,4CA6BzB,c,2DCwKSpB,oBAjLf,YAA2C,IAAnBG,EAAkB,EAAlBA,QAChBtC,EAAOE,IAD2B,EAEdG,mBAAS,IAFK,mBAEjC6D,EAFiC,KAE1BgE,EAF0B,OAGkB7H,mBAAS,IAH3B,mBAGjC8H,EAHiC,KAGVC,EAHU,OAIsB/H,mBAAS,IAJ/B,mBAIjCgI,EAJiC,KAIRC,EAJQ,OAKFjI,mBAAuB,CAC3D,CACEc,KAAM,GACN8F,OAAQ,MAR4B,mBAKjC3B,EALiC,KAKpBiD,EALoB,OAWFlI,mBAAS,IAXP,mBAWjCkF,EAXiC,KAWpBiD,EAXoB,OAYJnI,mBAAS,IAZL,mBAYjCoI,EAZiC,KAYrBC,EAZqB,KA4ClCC,EAA8B,SAACC,GAAD,OAA4B,WAExC,KAApBA,EAAWzH,MACe,KAA1BgH,GAC4B,KAA5BE,EApBkB,SAACO,GACrB,IACMC,EAAqB,aAAIvD,GAAawD,QAAO,SAAAhC,GAAI,MAAkB,KAAdA,EAAK3F,QAChEoH,EAAe,GAAD,oBAAKM,GAAL,CAAyBD,EAFrB,CAAEzH,KAAM,GAAI8F,OAAQ,OAGtCmB,EAAyB,IACzBE,EAA2B,IAiBzBS,CAAc,CACZ5H,KAAMgH,EACNlB,OAAQoB,IAEmB,KAApBO,EAAWzH,MAlBC,SAACyH,GACxB,IAAMC,EAAqB,aAAIvD,GAAawD,QAC1C,SAAAhC,GAAI,OAAIA,EAAK3F,OAASyH,EAAWzH,QAGnCoH,EAAeM,GAcbG,CAAiBJ,KAIrB,OACE,0BAEElG,SAAU,SAAAC,GAAC,OAAIA,EAAEC,mBAAoB,IAErC,kBAACC,EAAA,EAAD,CAAaC,OAAO,SAASC,UAAQ,EAAClB,WAAS,GAC7C,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,QAApB,mBACA,kBAACC,EAAA,EAAD,CACEvD,GAAG,QACHwB,KAAK,QACLgC,aAAa,MACbC,WAAS,EACTC,MAAOa,EACPxD,SAAU,SAAAiC,GAAC,OAAIuF,EAASvF,EAAEW,OAAOD,QACjCwE,MAAO,CAAExD,aAAc,WAG3B,yBACEwD,MAAO,CACL7D,QAAS,OACTiF,eAAgB,SAChB5E,aAAc,QACd6E,cAAe,WAGjB,kBAAClD,EAAA,EAAD,CAAYhE,UAAU,KAAKF,QAAQ,KAAKmE,cAAY,GAApD,oBAGCX,EAAYuB,KAAI,SAACC,EAAMkB,GAAP,OACf,kBAACmB,GAAA,EAAD,CACEnC,IAAG,UAAKF,EAAK3F,KAAV,YAAkBiI,WAOrBC,MACEvC,EAAK3F,KACH,6BACE,qCAAO2F,EAAK3F,KAAZ,cAAsB2F,EAAKG,UAG7B,yBACEY,MAAO,CACL7D,QAAS,SAGX,kBAACsF,GAAA,EAAD,CACEjG,MAAO8E,EACPzH,SAAU,SAAAiC,GAAC,OAAIyF,EAAyBzF,EAAEW,OAAOD,QACjDkG,YAAY,SAEd,kBAACD,GAAA,EAAD,CACEjG,MAAOgF,EACP3H,SAAU,SAAAiC,GAAC,OAAI2F,EAA2B3F,EAAEW,OAAOD,QACnDkG,YAAY,YAKpBxH,MAAO+E,EAAK3F,KAAO,eAAYlB,EAC/BuJ,SAAUb,EAA4B7B,GACtC2C,WAAY3C,EAAK3F,UAAOlB,EAAY,kBAAC,KAAD,MACpC4H,MAAO,CAAEtD,OAAQ,OAAQF,aAAc,OAAQqF,QAAS,YAI5D,kBAAC7G,EAAA,EAAD,CAAaC,OAAO,SAASjB,WAAS,GACpC,kBAAC8H,GAAA,EAAD,CACEhK,GAAG,cACHwB,KAAK,cACLkI,MAAM,cACNO,WAAS,EACTC,KAAK,IACLC,QAAQ,KACRzG,MAAOkC,EACP7E,SAAU,SAAAiC,GAAC,OAAI6F,EAAe7F,EAAEW,OAAOD,QACvCP,OAAO,YAGX,kBAACD,EAAA,EAAD,CAAaC,OAAO,SAASjB,WAAS,GACpC,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,QAApB,eACA,kBAACC,EAAA,EAAD,CACEvD,GAAG,aACHwB,KAAK,aACLgC,aAAa,MACbC,WAAS,EACTC,MAAOoF,EACP/H,SAAU,SAAAiC,GAAC,OAAI+F,EAAc/F,EAAEW,OAAOD,QACtCwE,MAAO,CAAExD,aAAc,YAK7B,kBAAC1C,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNwB,QAjJe,SAACZ,GACpB,GAAI3C,EAAM,CACR,IAAM+J,EAAY,CAChB7F,QACA8F,OAAQhK,EAAKwH,IACbnC,OAAQrF,EAAKuB,aAAe,GAC5BgE,cACAkD,aACAnD,eAEFpG,EAAY6K,MAkIZ,OAUA,kBAACpI,EAAA,EAAD,CACEC,KAAK,SACLC,WAAS,EACTC,QAAQ,YACRC,MAAM,YACNwB,QAASjB,EAAQ2H,QALnB,YCtKAtG,I,OAAQuG,eAgFCC,YA9EA,SAACxG,GAAD,MAAiB,CAC9ByG,KAAK,aACHC,MAAO,OACPrG,QAAS,QACTU,WAAYf,EAAM2G,QAAQ,GAC1BC,YAAa5G,EAAM2G,QAAQ,IAC1B3G,EAAM6G,YAAYC,GAAG,IAAM9G,EAAM2G,QAAQ,IAAM,CAC9CD,MAAO,OACP3F,WAAY,OACZ6F,YAAa,SAGjBG,MAAO,CACLC,UAAWhH,EAAM2G,QAAQ,GACzBtG,QAAS,OACTkF,cAAe,SACf0B,WAAY,SACZlB,QAAQ,GAAD,OAAK/F,EAAM2G,QAAQ,GAAnB,cAA2B3G,EAAM2G,QAAQ,GAAzC,cAAiD3G,EAAM2G,QAC5D,GADK,OAITrF,OAAQ,CACNnC,OAAQa,EAAM2G,UACdpF,gBAAiBvB,EAAMkH,QAAQzD,UAAUgD,MAE3CU,OAAQ,CACNH,UAAWhH,EAAM2G,QAAQ,OAoDdH,EAhDf,SAAazI,GAAY,IAEf+D,EAAY/D,EAAZ+D,QAFe,EAIQrF,EAAQhC,UAA/BmC,EAJe,EAIfA,aAAcP,EAJC,EAIDA,KAEtB,OADAhB,QAAQd,IAAI,aACY,IAAjBqC,EACL,0BAAMsF,UAAWJ,EAAQ2E,MACvB,kBAACW,EAAA,EAAD,CAAOlF,UAAWJ,EAAQiF,OACxB,kBAACM,EAAA,EAAD,CAAQnF,UAAWJ,EAAQR,QACzB,kBAAC,IAAD,OAEDjF,GAAQA,EAAKuB,aACZ,kBAACyE,EAAA,EAAD,CAAYhE,UAAU,KAAKF,QAAQ,MAAnC,SACS9B,EAAKuB,aAIhB,kBAACzB,EAAYmL,SAAb,CACE5H,MAAO,CACL9C,eAEAP,KAAMA,IAGR,kBAACkL,EAAA,EAAD,CAAkBvH,MAAOA,IACvB,kBAACwH,EAAA,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIrJ,UAAWP,IACjC,kBAAC,IAAD,CAAO2J,OAAK,EAACC,KAAK,SAASrJ,UAAWsJ,IACtC,kBAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,UAAUrJ,UAAWuJ,IACvC,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAK,aAAarJ,UAAWwJ,KAC1C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAK,UAAUrJ,UAAWyJ,WAQnD,yBAAK9L,GAAG,UACN,kBAAC+L,EAAA,EAAD,U,OC1FNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SbgI3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.e62a38f1.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as firebase from 'firebase/app'\n// @ts-ignore\nimport debug from 'debug'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport config from './firebaseConfig'\n\nconst log = debug('app:db')\n\nfirebase.initializeApp(config)\n\nexport const db = firebase.firestore()\n\ndb.enablePersistence().catch(function(err) {\n  console.error(err)\n})\n\nexport interface RecipeOptions {\n  title: string\n  userId: string\n  description?: string\n  recipeLink?: string\n  image?: string\n  author: string\n  ingredients?: Ingredient[]\n}\n\nexport interface Ingredient {\n  name: string\n  amount: string\n}\n\nexport const createEntry = (options: RecipeOptions) => {\n  log('save recipe: %o', options)\n  return db.collection('recipes').add({\n    ...options,\n    updatedAt: firebase.firestore.Timestamp.fromDate(new Date()),\n  })\n}\n\nexport const deleteEntry = (id: string) => {\n  log('delete: %s', id)\n  return db\n    .collection('recipes')\n    .doc(id)\n    .delete()\n}\n","export default {\n  apiKey: 'AIzaSyD99CEVcpATt7i6Jb7YNpnhQ7rhOwlWOto',\n  authDomain: 'what-to-eato.firebaseapp.com',\n  databaseURL: 'https://what-to-eato.firebaseio.com',\n  projectId: 'what-to-eato',\n  storageBucket: '',\n  messagingSenderId: '18156276179',\n  appId: '1:18156276179:web:ace837d492f4f20b7b4726',\n}\n","import * as React from 'react'\n\ninterface UserContext {\n  user?: firebase.User\n  initialising?: boolean\n}\n\nexport const UserContext = React.createContext<UserContext>({\n  user: undefined,\n})\n","import React from 'react'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { useContext } from 'react'\nimport { UserContext } from './UserContext'\n\nexport const useSession = () => {\n  const { user } = useContext(UserContext)\n  return user\n}\n\nexport const useAuth = () => {\n  const [state, setState] = React.useState(() => {\n    const user = firebase.auth().currentUser\n    return { initializing: !user, user }\n  })\n\n  function onChange(user: any) {\n    setState({ initializing: false, user })\n  }\n\n  React.useEffect(() => {\n    // listen for auth state changes\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange)\n    // unsubscribe to the listener when unmounting\n    return () => unsubscribe()\n  }, [])\n\n  return state\n}\n\nexport const loginWithEmail = (email: string, password: string) => {\n  try {\n    return firebase.auth().signInWithEmailAndPassword(email, password)\n  } catch (err) {\n    console.error(err)\n    throw err\n  }\n}\n\nexport const createUserWithEmail = async (\n  name: string,\n  email: string,\n  password: string\n) => {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password)\n\n    // @ts-ignore\n    return firebase.auth().currentUser.updateProfile({\n      displayName: name,\n    })\n  } catch (err) {\n    console.error(err)\n    throw err\n  }\n}\n\nexport const getCurrentUsername = () => {\n  const auth = firebase.auth()\n  return auth.currentUser && auth.currentUser.displayName\n}\n\nexport const signOut = () => firebase.auth().signOut()\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n// @ts-ignore\nimport { Link } from 'react-router-dom'\n\n// @ts-ignore\nexport default function HomePage(props) {\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/signup\"\n      >\n        Register\n      </Button>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/login\"\n      >\n        Login\n      </Button>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/dashboard\"\n      >\n        Dashboard\n      </Button>\n    </>\n  )\n}\n","import React, { useState } from 'react'\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core'\n// @ts-ignore\nimport { Link, withRouter } from 'react-router-dom'\nimport { loginWithEmail } from '../../auth'\n\n// @ts-ignore\nfunction SignIn(props) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  async function handleLoginClick() {\n    try {\n      await loginWithEmail(email, password)\n      props.history.replace('/dashboard')\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n\n  return (\n    <form\n      // @ts-ignore\n      onSubmit={e => e.preventDefault() && false}\n    >\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          autoFocus\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </FormControl>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleLoginClick}\n      >\n        Sign in\n      </Button>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/signup\"\n      >\n        Signup\n      </Button>\n    </form>\n  )\n}\n\n// @ts-ignore\nexport default withRouter(SignIn)\n","import React, { useState } from 'react'\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core'\n// @ts-ignore\nimport { Link, withRouter } from 'react-router-dom'\nimport { createUserWithEmail } from '../../auth'\n\n// @ts-ignore\nfunction Signup(props) {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  async function handleSignupClick() {\n    try {\n      createUserWithEmail(name, email, password)\n      props.history.replace('/dashboard')\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n\n  return (\n    <form\n      // @ts-ignore\n      onSubmit={e => e.preventDefault() && false}\n    >\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"name\">Name</InputLabel>\n        <Input\n          id=\"name\"\n          name=\"name\"\n          autoComplete=\"off\"\n          autoFocus\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSignupClick}\n      >\n        Signup\n      </Button>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/login\"\n      >\n        Go back to Login\n      </Button>\n    </form>\n  )\n}\n\n// @ts-ignore\nexport default withRouter(Signup)\n","import React, { useState } from 'react'\n\nimport { deleteEntry, Ingredient } from '../../db'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Card from '@material-ui/core/Card'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport Collapse from '@material-ui/core/Collapse'\nimport IconButton from '@material-ui/core/IconButton'\nimport { red } from '@material-ui/core/colors'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nconst useStyles = makeStyles(theme => ({\n  card: {\n    minWidth: 275,\n    maxWidth: 345,\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}))\n\ntype RecipeProps = {\n  id: string\n  title: string\n  description?: string\n  recipeLink?: string\n  image?: string\n  author: string\n  ingredients?: Ingredient[]\n}\n\nexport default function Recipe({\n  id,\n  title,\n  author,\n  ingredients,\n  description,\n  image,\n}: RecipeProps) {\n  const classes = useStyles()\n  const [expanded, setExpanded] = useState(false)\n\n  const handleExpandClick = () => {\n    setExpanded(!expanded)\n  }\n\n  const handleDeleteClick = () => {\n    deleteEntry(id)\n  }\n\n  return (\n    <Card className={classes.card}>\n      {image && <CardMedia className={classes.media} image={image} />}\n      <CardContent>\n        <Typography\n          className={classes.title}\n          color=\"textSecondary\"\n          gutterBottom\n        >\n          Receptielis\n        </Typography>\n        <Typography variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n      </CardContent>\n      <CardActions disableSpacing>\n        <IconButton\n          className={classes.expand}\n          onClick={handleExpandClick}\n          aria-expanded={expanded}\n          aria-label=\"show more\"\n        >\n          <ExpandMoreIcon />\n        </IconButton>\n        <IconButton aria-label=\"delete\" onClick={handleDeleteClick}>\n          <DeleteIcon />\n        </IconButton>\n      </CardActions>\n      <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n        <CardContent>\n          <Typography>{author}</Typography>\n          <List dense>\n            {ingredients &&\n              ingredients.map(item => (\n                <ListItem key={`${item.name}+${item.amount}`}>\n                  <ListItemText primary={item.name} secondary={item.amount} />\n                </ListItem>\n              ))}\n          </List>\n\n          <Typography>{description}</Typography>\n        </CardContent>\n      </Collapse>\n    </Card>\n  )\n}\n","import React from 'react'\n// @ts-ignore\nimport {\n  useCollectionData,\n  useCollection,\n} from 'react-firebase-hooks/firestore'\nimport { db } from '../../db'\nimport { useSession } from '../../auth'\nimport Recipe from './Recipe'\n\nexport default function RecipeList() {\n  const user = useSession()\n  const [values, loading, error] = useCollectionData(\n    db\n      .collection('recipes')\n\n      .where('userId', '==', user!.uid)\n      .orderBy('title', 'asc'),\n    { idField: 'id' }\n  )\n  console.log(values)\n\n  // @ts-ignore\n  const userRecipes: any[] = values\n  return (\n    <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n      {userRecipes &&\n        userRecipes.length > 0 &&\n        userRecipes.map((item, index) => (\n          <Recipe key={index} id={item.id} title={item.title} {...item} />\n        ))}\n    </div>\n  )\n}\n","import React from 'react'\nimport { Button } from '@material-ui/core'\n// @ts-ignore\nimport { withRouter, Link } from 'react-router-dom'\nimport { useSession, signOut } from '../../auth'\nimport RecipeList from './RecipeList'\n\nfunction Dashboard(props: any) {\n  // @ts-ignore\n  const user = useSession()\n\n  if (!user) {\n    props.history.push('/')\n    return null\n  }\n\n  async function handleLogoutClick() {\n    await signOut()\n    props.history.push('/')\n  }\n\n  return (\n    <>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        to={'/create'}\n        component={Link}\n      >\n        Add recipe\n      </Button>\n\n      <RecipeList />\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleLogoutClick}\n      >\n        Logout\n      </Button>\n    </>\n  )\n}\n\n// @ts-ignore\nexport default withRouter(Dashboard)\n","import React, { useState } from 'react'\n// @ts-ignore\nimport { withRouter } from 'react-router-dom'\nimport {\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n  Chip,\n  InputBase,\n  Typography,\n  TextField,\n} from '@material-ui/core'\nimport DoneIcon from '@material-ui/icons/Done'\nimport { createEntry } from '../../db'\nimport { useSession } from '../../auth'\n\ntype Props = {\n  history: any\n}\n\nexport interface Ingredient {\n  name: string\n  amount: string\n}\n\nfunction CreateRecipe({ history }: Props) {\n  const user = useSession()\n  const [title, setTitle] = useState('')\n  const [currentIngredientName, setCurrentIngredientName] = useState('')\n  const [currentIngredientAmount, setCurrentIngredientAmount] = useState('')\n  const [ingredients, setIngredients] = useState<Ingredient[]>([\n    {\n      name: '',\n      amount: '',\n    },\n  ])\n  const [description, setDescription] = useState('')\n  const [recipeLink, setRecipeLink] = useState('')\n\n  const handleSubmit = (e: any) => {\n    if (user) {\n      const newRecipe = {\n        title,\n        userId: user.uid,\n        author: user.displayName || '',\n        description,\n        recipeLink,\n        ingredients,\n      }\n      createEntry(newRecipe)\n    }\n  }\n\n  const addIngredient = (ingredient: Ingredient) => {\n    const inputItem = { name: '', amount: '' }\n    const updatedIngredients = [...ingredients].filter(item => item.name !== '')\n    setIngredients([...updatedIngredients, ingredient, inputItem])\n    setCurrentIngredientName('')\n    setCurrentIngredientAmount('')\n  }\n\n  const removeIngredient = (ingredient: Ingredient) => {\n    const updatedIngredients = [...ingredients].filter(\n      item => item.name !== ingredient.name\n    )\n\n    setIngredients(updatedIngredients)\n  }\n\n  const handleIngredientActionClick = (ingredient: Ingredient) => () => {\n    if (\n      ingredient.name === '' &&\n      currentIngredientName !== '' &&\n      currentIngredientAmount !== ''\n    ) {\n      addIngredient({\n        name: currentIngredientName,\n        amount: currentIngredientAmount,\n      })\n    } else if (ingredient.name !== '') {\n      removeIngredient(ingredient)\n    }\n  }\n\n  return (\n    <form\n      // @ts-ignore\n      onSubmit={e => e.preventDefault() && false}\n    >\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"name\">Name that stuff</InputLabel>\n        <Input\n          id=\"title\"\n          name=\"title\"\n          autoComplete=\"off\"\n          autoFocus\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          style={{ marginBottom: '50px' }}\n        />\n      </FormControl>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '100px',\n          flexDirection: 'column',\n        }}\n      >\n        <Typography component=\"h2\" variant=\"h6\" gutterBottom>\n          Ingredients list\n        </Typography>\n        {ingredients.map((item, index) => (\n          <Chip\n            key={`${item.name}-${indexedDB}`}\n            // avatar={\n            //   <Avatar\n            //     alt=\"Natacha\"\n            //     src=\"https://res.cloudinary.com/teepublic/image/private/s--hpEAW5us--/t_Resized%20Artwork/c_fit,g_north_west,h_954,w_954/co_fffffe,e_outline:48/co_fffffe,e_outline:inner_fill:48/co_ffffff,e_outline:48/co_ffffff,e_outline:inner_fill:48/co_bbbbbb,e_outline:3:1000/c_mpad,g_center,h_1260,w_1260/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1502933243/production/designs/1827343_0.jpg\"\n            //   />\n            // }\n            label={\n              item.name ? (\n                <div>\n                  <p>{`${item.name} - ${item.amount}`}</p>\n                </div>\n              ) : (\n                <div\n                  style={{\n                    display: 'flex',\n                  }}\n                >\n                  <InputBase\n                    value={currentIngredientName}\n                    onChange={e => setCurrentIngredientName(e.target.value)}\n                    placeholder=\"Name\"\n                  />\n                  <InputBase\n                    value={currentIngredientAmount}\n                    onChange={e => setCurrentIngredientAmount(e.target.value)}\n                    placeholder=\"Amount\"\n                  />\n                </div>\n              )\n            }\n            color={item.name ? 'primary' : undefined}\n            onDelete={handleIngredientActionClick(item)}\n            deleteIcon={item.name ? undefined : <DoneIcon />}\n            style={{ height: '100%', marginBottom: '15px', padding: '5px' }}\n          />\n        ))}\n\n        <FormControl margin=\"normal\" fullWidth>\n          <TextField\n            id=\"description\"\n            name=\"description\"\n            label=\"Description\"\n            multiline\n            rows=\"4\"\n            rowsMax=\"10\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            margin=\"normal\"\n          />\n        </FormControl>\n        <FormControl margin=\"normal\" fullWidth>\n          <InputLabel htmlFor=\"name\">Recipe link</InputLabel>\n          <Input\n            id=\"recipeLink\"\n            name=\"recipeLink\"\n            autoComplete=\"off\"\n            autoFocus\n            value={recipeLink}\n            onChange={e => setRecipeLink(e.target.value)}\n            style={{ marginBottom: '50px' }}\n          />\n        </FormControl>\n      </div>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleSubmit}\n      >\n        Add\n      </Button>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={history.goBack}\n      >\n        Back\n      </Button>\n    </form>\n  )\n}\n\nexport default withRouter(CreateRecipe)\n","import React from 'react'\nimport * as firebase from 'firebase/app'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n// @ts-ignore\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { useAuth } from '../../auth'\n\nimport withStyles from '@material-ui/core/styles/withStyles'\nimport { UserContext } from '../../UserContext'\nimport VerifiedUserOutlined from '@material-ui/icons/VerifiedUserOutlined'\nimport {\n  Typography,\n  Paper,\n  Avatar,\n  CircularProgress,\n  CssBaseline,\n} from '@material-ui/core'\nimport HomePage from '../Home/Home'\nimport Login from '../Login/Login'\nimport Signup from '../Signup/Signup'\nimport Dashboard from '../Dashboard/Dashboard'\nimport CreateRecipe from '../Dashboard/CreateRecipe'\nimport 'typeface-roboto'\n\nconst theme = createMuiTheme()\n\nconst styles = (theme: any) => ({\n  main: {\n    width: 'auto',\n    display: 'block', // Fix IE 11 issue.\n    marginLeft: theme.spacing(3),\n    marginRight: theme.spacing(3),\n    [theme.breakpoints.up(400 + theme.spacing(6))]: {\n      width: '70vw',\n      marginLeft: 'auto',\n      marginRight: 'auto',\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n      3\n    )}px`,\n  },\n  avatar: {\n    margin: theme.spacing(),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    marginTop: theme.spacing(3),\n  },\n})\n\nfunction App(props: any) {\n  // @ts-ignore\n  const { classes } = props\n  // @ts-ignore\n  const { initializing, user } = useAuth(firebase.auth())\n  console.log('I am app')\n  return initializing !== true ? (\n    <main className={classes.main}>\n      <Paper className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <VerifiedUserOutlined />\n        </Avatar>\n        {user && user.displayName && (\n          <Typography component=\"h1\" variant=\"h5\">\n            Hello {user.displayName}\n          </Typography>\n        )}\n\n        <UserContext.Provider\n          value={{\n            initializing,\n            // @ts-ignore\n            user: user,\n          }}\n        >\n          <MuiThemeProvider theme={theme}>\n            <CssBaseline />\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={HomePage} />\n                <Route exact path=\"/login\" component={Login} />\n                <Route exact path=\"/signup\" component={Signup} />\n                <Route exact path=\"/dashboard\" component={Dashboard} />\n                <Route exact path=\"/create\" component={CreateRecipe} />\n              </Switch>\n            </Router>\n          </MuiThemeProvider>\n        </UserContext.Provider>\n      </Paper>\n    </main>\n  ) : (\n    <div id=\"loader\">\n      <CircularProgress />\n    </div>\n  )\n}\n\n// @ts-ignore\nexport default withStyles(styles)(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport './db'\n\nimport App from './components/App/App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}
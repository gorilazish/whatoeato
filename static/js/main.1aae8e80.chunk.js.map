{"version":3,"sources":["serviceWorker.ts","db.ts","firebaseConfig.ts","UserContext.ts","auth.ts","components/Login/Login.tsx","components/Signup/Signup.tsx","components/Modal/ModalRoot.tsx","components/Modal/Modal.tsx","components/Dashboard/Recipe.tsx","components/Dashboard/RecipeList.tsx","components/Dashboard/CreateRecipe.tsx","components/Dashboard/Dashboard.tsx","components/Header/Header.tsx","components/App/App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","log","debug","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","enablePersistence","catch","err","console","error","createEntry","options","collection","add","updatedAt","Timestamp","fromDate","Date","deleteEntry","id","doc","delete","UserContext","React","user","undefined","useSession","useContext","useAuth","useState","currentUser","initializing","state","setState","onChange","useEffect","unsubscribe","onAuthStateChanged","loginWithEmail","email","password","signInWithEmailAndPassword","createUserWithEmail","name","a","createUserWithEmailAndPassword","updateProfile","displayName","signOut","withRouter","props","setEmail","setPassword","history","replace","alert","message","onSubmit","e","preventDefault","FormControl","margin","required","fullWidth","InputLabel","htmlFor","Input","autoComplete","autoFocus","value","target","type","Button","variant","color","onClick","component","Link","to","setName","ModalRoot","children","modalRoot","document","getElementById","ReactDOM","createPortal","Container","styled","div","ModalContainer","Modal","isOpen","MyCard","ContentWrapper","CardContent","CardMedia","Recipe","title","ingredients","author","description","image","relatedLinks","style","isFullViewOpen","setIsFullViewOpen","handleCardClick","backgroundImage","Typography","IconButton","aria-label","height","paddingTop","List","dense","map","item","ListItem","key","amount","ListItemText","primary","secondary","length","slice","index","href","link","gutterBottom","GridList","RecipeList","useCollectionData","where","uid","orderBy","idField","values","userRecipes","setTitle","currentIngredientName","setCurrentIngredientName","currentIngredientAmount","setCurrentIngredientAmount","setIngredients","setDescription","recipeLink","setRecipeLink","handleIngredientActionClick","ingredient","updatedIngredients","filter","addIngredient","removeIngredient","marginBottom","display","justifyContent","flexDirection","Chip","indexedDB","label","InputBase","placeholder","disabled","onDelete","deleteIcon","padding","TextField","multiline","rows","rowsMax","newRecipe","userId","goBack","show","setShow","nav","Header","theme","createMuiTheme","main","App","Provider","MuiThemeProvider","exact","path","Dashboard","Login","Signup","CircularProgress","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1aae8e80.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as firebase from 'firebase/app'\n// @ts-ignore\nimport debug from 'debug'\nimport 'firebase/firestore'\nimport 'firebase/auth'\nimport config from './firebaseConfig'\n\nconst log = debug('app:db')\n\nfirebase.initializeApp(config)\n\nexport const db = firebase.firestore()\n\ndb.enablePersistence().catch(function(err) {\n  console.error(err)\n})\n\nexport interface RecipeOptions {\n  title: string\n  userId: string\n  description?: string\n  recipeLink?: string\n  image?: string\n  author: string\n  ingredients?: Ingredient[]\n}\n\nexport interface Ingredient {\n  name: string\n  amount: string\n}\n\nexport const createEntry = (options: RecipeOptions) => {\n  log('save recipe: %o', options)\n  return db.collection('recipes').add({\n    ...options,\n    updatedAt: firebase.firestore.Timestamp.fromDate(new Date()),\n  })\n}\n\nexport const deleteEntry = (id: string) => {\n  log('delete: %s', id)\n  return db\n    .collection('recipes')\n    .doc(id)\n    .delete()\n}\n","export default {\n    apiKey: 'AIzaSyD99CEVcpATt7i6Jb7YNpnhQ7rhOwlWOto',\n    authDomain: 'what-to-eato.firebaseapp.com',\n    databaseURL: 'https://what-to-eato.firebaseio.com',\n    projectId: 'what-to-eato',\n    storageBucket: '',\n    messagingSenderId: '18156276179',\n    appId: '1:18156276179:web:ace837d492f4f20b7b4726',\n  }\n  ","import * as React from 'react'\n\ninterface UserContext {\n  user?: firebase.User\n  initialising?: boolean\n}\n\nexport const UserContext = React.createContext<UserContext>({\n  user: undefined,\n})\n","import React from 'react'\nimport * as firebase from 'firebase/app'\nimport 'firebase/auth'\nimport { useContext } from 'react'\nimport { UserContext } from './UserContext'\n\nexport const useSession = () => {\n  const { user } = useContext(UserContext)\n  return user\n}\n\nexport const useAuth = () => {\n  const [state, setState] = React.useState(() => {\n    const user = firebase.auth().currentUser\n    return { initializing: !user, user }\n  })\n\n  function onChange(user: any) {\n    setState({ initializing: false, user })\n  }\n\n  React.useEffect(() => {\n    // listen for auth state changes\n    const unsubscribe = firebase.auth().onAuthStateChanged(onChange)\n    // unsubscribe to the listener when unmounting\n    return () => unsubscribe()\n  }, [])\n\n  return state\n}\n\nexport const loginWithEmail = (email: string, password: string) => {\n  try {\n    return firebase.auth().signInWithEmailAndPassword(email, password)\n  } catch (err) {\n    console.error(err)\n    throw err\n  }\n}\n\nexport const createUserWithEmail = async (\n  name: string,\n  email: string,\n  password: string\n) => {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password)\n\n    // @ts-ignore\n    return firebase.auth().currentUser.updateProfile({\n      displayName: name,\n    })\n  } catch (err) {\n    console.error(err)\n    throw err\n  }\n}\n\nexport const getCurrentUsername = () => {\n  const auth = firebase.auth()\n  return auth.currentUser && auth.currentUser.displayName\n}\n\nexport const signOut = () => firebase.auth().signOut()\n","import React, { useState } from 'react'\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core'\n// @ts-ignore\nimport { Link, withRouter } from 'react-router-dom'\nimport { loginWithEmail } from '../../auth'\n\n// @ts-ignore\nfunction SignIn(props) {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  async function handleLoginClick() {\n    try {\n      await loginWithEmail(email, password)\n      props.history.replace('/')\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n\n  return (\n    <form\n      // @ts-ignore\n      onSubmit={e => e.preventDefault() && false}\n    >\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          autoFocus\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </FormControl>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleLoginClick}\n      >\n        Sign in\n      </Button>\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/signup\"\n      >\n        Signup\n      </Button>\n    </form>\n  )\n}\n\n// @ts-ignore\nexport default withRouter(SignIn)\n","import React, { useState } from 'react'\nimport { Button, FormControl, Input, InputLabel } from '@material-ui/core'\n// @ts-ignore\nimport { Link, withRouter } from 'react-router-dom'\nimport { createUserWithEmail } from '../../auth'\n\n// @ts-ignore\nfunction Signup(props) {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  async function handleSignupClick() {\n    try {\n      createUserWithEmail(name, email, password)\n      props.history.replace('/')\n    } catch (error) {\n      alert(error.message)\n    }\n  }\n\n  return (\n    <form\n      // @ts-ignore\n      onSubmit={e => e.preventDefault() && false}\n    >\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"name\">Name</InputLabel>\n        <Input\n          id=\"name\"\n          name=\"name\"\n          autoComplete=\"off\"\n          autoFocus\n          value={name}\n          onChange={e => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"email\">Email Address</InputLabel>\n        <Input\n          id=\"email\"\n          name=\"email\"\n          autoComplete=\"off\"\n          value={email}\n          onChange={e => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"password\">Password</InputLabel>\n        <Input\n          name=\"password\"\n          type=\"password\"\n          id=\"password\"\n          autoComplete=\"off\"\n          value={password}\n          onChange={e => setPassword(e.target.value)}\n        />\n      </FormControl>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleSignupClick}\n      >\n        Signup\n      </Button>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/login\"\n      >\n        Go back to Login\n      </Button>\n    </form>\n  )\n}\n\n// @ts-ignore\nexport default withRouter(Signup)\n","import ReactDOM from 'react-dom'\n\nconst ModalRoot = ({ children }: any) => {\n  const modalRoot = document.getElementById('modal-root');\n\n  return ReactDOM.createPortal(\n    children,\n    modalRoot!,\n  )\n}\n\nexport default ModalRoot","import React from 'react'\nimport styled from '@emotion/styled'\n\nimport ModalRoot from './ModalRoot'\n\n\nconst Container = styled.div`\n    top: 0;\n    left: 0;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: rgba(0,0,0, .5);\n    z-index: 11;\n`\n\nconst ModalContainer = styled.div`\n    height: 70vh;\n    width: 80vw;\n    background: white;\n    padding: 5%;\n    overflow: auto;\n`\n\nconst Modal = ({ children, isOpen }: any) => {\n    return isOpen ? (\n        <ModalRoot>\n            <Container>\n                <ModalContainer>\n                    {children}\n                </ModalContainer>\n            </Container>\n        </ModalRoot>\n    ) : null\n}\n\nexport default Modal","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { css } from '@emotion/core'\n\nimport { deleteEntry, Ingredient } from '../../db'\n\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport IconButton from '@material-ui/core/IconButton'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport Modal from '../Modal/Modal'\n\nconst MyCard = styled.div`\n  max-width: 345px;\n  width: 100%;\n`\n\nconst ContentWrapper = styled.div`\n  display: grid;\n`\n\nconst CardContent = styled.div`\n  width: 80%;\n  margin: 0 auto;\n  background: white;\n  margin-top: -30px;\n  padding: 30px 10px;\n`\n\nconst CardMedia = styled.div`\n  height: 100%;\n  padding-top: 56.25%;\n  display: block;\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n`\n\ntype RecipeProps = {\n  id: string\n  title: string\n  description?: string\n  recipeLink?: string\n  image?: string\n  author: string\n  ingredients?: Ingredient[]\n  relatedLinks?: any[]\n  style?: object\n}\n\nexport default function Recipe({\n  id,\n  title,\n  author,\n  ingredients,\n  description,\n  image,\n  relatedLinks = [],\n  style,\n}: RecipeProps) {\n  const [isFullViewOpen, setIsFullViewOpen] = useState(false)\n\n  const handleCardClick = () => {\n    setIsFullViewOpen(!isFullViewOpen)\n  }\n\n  const handleDeleteClick = () => {\n    deleteEntry(id)\n  }\n\n  return (\n    <MyCard>\n      <ContentWrapper>\n        <div>\n          {image && <CardMedia style={{ backgroundImage: `url(${image})` }} />}\n\n        </div>\n        <CardContent onClick={handleCardClick}>\n\n          <Typography variant=\"h5\" component=\"h2\">\n            {title}\n          </Typography>\n          <Typography>{description}</Typography>\n          <IconButton aria-label=\"delete\" onClick={handleDeleteClick}>\n            <DeleteIcon />\n          </IconButton>\n        </CardContent>\n\n      </ContentWrapper>\n\n      <Modal isOpen={isFullViewOpen}>\n        <button onClick={handleCardClick}>CLOSE</button>\n        {image && <CardMedia style={{ backgroundImage: `url(${image})`, height: 0, paddingTop: '25%' }} />}\n\n        <Typography variant=\"h5\" component=\"h2\">\n          {title}\n        </Typography>\n        <List dense>\n          {ingredients &&\n            ingredients.map(item => (\n              <ListItem key={`${item.name}+${item.amount}`}>\n                <ListItemText primary={item.name} secondary={item.amount} />\n              </ListItem>\n            ))}\n        </List>\n        <List>\n          {relatedLinks.length > 0 &&\n            relatedLinks.slice(0, 3).map((item, index) => (\n              <a href={item.link} key={index}>\n                <Typography\n                  color=\"textSecondary\"\n                  gutterBottom\n                >\n                  {item.title}\n                </Typography>\n              </a>\n            ))}\n        </List>\n        <Typography>{description}</Typography>\n      </Modal>\n    </MyCard>\n  )\n}\n","import React from 'react'\nimport styled from '@emotion/styled'\n// @ts-ignore\nimport {\n  useCollectionData,\n} from 'react-firebase-hooks/firestore'\n\nimport { db } from '../../db'\nimport { useSession } from '../../auth'\nimport Recipe from './Recipe'\n\nconst GridList = styled.div`\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 10px;\n  \n  @media (min-width: 640px) {\n    grid-template-columns: 1fr 1fr 1fr;\n    grid-gap: 30px;\n  }\n`\n\nexport default function RecipeList() {\n  const user = useSession()\n  const [values, loading, error] = useCollectionData(\n    db\n      .collection('recipes')\n\n      .where('userId', '==', user!.uid)\n      .orderBy('title', 'asc'),\n    { idField: 'id' }\n  )\n  console.log(values)\n\n  // @ts-ignore\n  const userRecipes: any[] = values\n  return (\n    <GridList>\n      {userRecipes &&\n        userRecipes.length > 0 &&\n        userRecipes.map((item, index) => (\n          <Recipe key={index} id={item.id} title={item.title} {...item} />\n        ))}\n    </GridList>\n  )\n}\n","import React, { useState } from 'react'\n// @ts-ignore\nimport { withRouter } from 'react-router-dom'\nimport {\n  Avatar,\n  Button,\n  FormControl,\n  Input,\n  InputLabel,\n  Chip,\n  InputBase,\n  Typography,\n  TextField,\n} from '@material-ui/core'\nimport DoneIcon from '@material-ui/icons/Done'\nimport { createEntry } from '../../db'\nimport { useSession } from '../../auth'\n\ntype Props = {\n  history: any\n}\n\nexport interface Ingredient {\n  name: string\n  amount: string\n}\n\nfunction CreateRecipe({ history }: Props) {\n  const user = useSession()\n  const [title, setTitle] = useState('')\n  const [currentIngredientName, setCurrentIngredientName] = useState('')\n  const [currentIngredientAmount, setCurrentIngredientAmount] = useState('')\n  const [ingredients, setIngredients] = useState<Ingredient[]>([\n    {\n      name: '',\n      amount: '',\n    },\n  ])\n  const [description, setDescription] = useState('')\n  const [recipeLink, setRecipeLink] = useState('')\n\n  const handleSubmit = (e: any) => {\n    if (user) {\n      const newRecipe = {\n        title,\n        userId: user.uid,\n        author: user.displayName || '',\n        description,\n        recipeLink,\n        ingredients,\n      }\n      createEntry(newRecipe)\n    }\n  }\n\n  const addIngredient = (ingredient: Ingredient) => {\n    const inputItem = { name: '', amount: '' }\n    const updatedIngredients = [...ingredients].filter(item => item.name !== '')\n    setIngredients([...updatedIngredients, ingredient, inputItem])\n    setCurrentIngredientName('')\n    setCurrentIngredientAmount('')\n  }\n\n  const removeIngredient = (ingredient: Ingredient) => {\n    const updatedIngredients = [...ingredients].filter(\n      item => item.name !== ingredient.name\n    )\n\n    setIngredients(updatedIngredients)\n  }\n\n  const handleIngredientActionClick = (ingredient: Ingredient) => () => {\n    if (\n      ingredient.name === '' &&\n      currentIngredientName !== '' &&\n      currentIngredientAmount !== ''\n    ) {\n      addIngredient({\n        name: currentIngredientName,\n        amount: currentIngredientAmount,\n      })\n    } else if (ingredient.name !== '') {\n      removeIngredient(ingredient)\n    }\n  }\n\n  return (\n    <form\n      // @ts-ignore\n      onSubmit={e => e.preventDefault() && false}\n    >\n      <FormControl margin=\"normal\" required fullWidth>\n        <InputLabel htmlFor=\"name\">Name that stuff</InputLabel>\n        <Input\n          id=\"title\"\n          name=\"title\"\n          autoComplete=\"off\"\n          autoFocus\n          value={title}\n          onChange={e => setTitle(e.target.value)}\n          style={{ marginBottom: '50px' }}\n        />\n      </FormControl>\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '100px',\n          flexDirection: 'column',\n        }}\n      >\n        <Typography component=\"h2\" variant=\"h6\" gutterBottom>\n          Ingredients list\n        </Typography>\n        {ingredients.map((item, index) => (\n          <Chip\n            key={`${item.name}-${indexedDB}`}\n            // avatar={\n            //   <Avatar\n            //     alt=\"Natacha\"\n            //     src=\"https://res.cloudinary.com/teepublic/image/private/s--hpEAW5us--/t_Resized%20Artwork/c_fit,g_north_west,h_954,w_954/co_fffffe,e_outline:48/co_fffffe,e_outline:inner_fill:48/co_ffffff,e_outline:48/co_ffffff,e_outline:inner_fill:48/co_bbbbbb,e_outline:3:1000/c_mpad,g_center,h_1260,w_1260/b_rgb:eeeeee/c_limit,f_jpg,h_630,q_90,w_630/v1502933243/production/designs/1827343_0.jpg\"\n            //   />\n            // }\n            label={\n              // item.name ? (\n              //   <div>\n              //     <p>{`${item.name} - ${item.amount}`}</p>\n              //   </div>\n              // ) :\n\n              <div\n                style={{\n                  display: 'flex',\n                }}\n              >\n                <InputBase\n                  value={item.name || currentIngredientName}\n                  onChange={e => setCurrentIngredientName(e.target.value)}\n                  placeholder=\"Name\"\n                  disabled={!!item.name}\n                />\n                <InputBase\n                  value={item.amount || currentIngredientAmount}\n                  onChange={e => setCurrentIngredientAmount(e.target.value)}\n                  placeholder=\"Amount\"\n                  disabled={!!item.amount}\n                />\n              </div>\n            }\n            onDelete={handleIngredientActionClick(item)}\n            deleteIcon={item.name ? undefined : <DoneIcon />}\n            style={{ height: '100%', marginBottom: '15px', padding: '5px' }}\n          />\n        ))}\n\n        <FormControl margin=\"normal\" fullWidth>\n          <TextField\n            id=\"description\"\n            name=\"description\"\n            label=\"Description\"\n            multiline\n            rows=\"4\"\n            rowsMax=\"10\"\n            value={description}\n            onChange={e => setDescription(e.target.value)}\n            margin=\"normal\"\n          />\n        </FormControl>\n        <FormControl margin=\"normal\" fullWidth>\n          <InputLabel htmlFor=\"name\">Recipe link</InputLabel>\n          <Input\n            id=\"recipeLink\"\n            name=\"recipeLink\"\n            autoComplete=\"off\"\n            autoFocus\n            value={recipeLink}\n            onChange={e => setRecipeLink(e.target.value)}\n            style={{ marginBottom: '50px' }}\n          />\n        </FormControl>\n      </div>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={handleSubmit}\n      >\n        Add\n      </Button>\n\n      <Button\n        type=\"submit\"\n        fullWidth\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={history.goBack}\n      >\n        Back\n      </Button>\n    </form>\n  )\n}\n\nexport default withRouter(CreateRecipe)\n","import React, { useState } from 'react'\nimport styled from '@emotion/styled'\nimport { Button } from '@material-ui/core'\n// @ts-ignore\nimport { withRouter, Link } from 'react-router-dom'\nimport { useSession } from '../../auth'\nimport RecipeList from './RecipeList'\nimport Modal from '../Modal/Modal'\nimport CreateRecipe from './CreateRecipe'\n\nconst Container = styled.div`\n    top: 0;\n    left: 0;\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n`\n\nfunction Dashboard(props: any) {\n  const [show, setShow] = useState(false)\n  // @ts-ignore\n  const user = useSession()\n\n\n\n  return !user ? (\n    <>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/login\"\n      >\n        Login\n      </Button>\n      <Button\n        type=\"submit\"\n        variant=\"contained\"\n        color=\"secondary\"\n        component={Link}\n        to=\"/signup\"\n      >\n        Register\n      </Button>\n    </>\n  ) : (\n      <>\n        <Button color=\"secondary\" variant=\"contained\" onClick={() => setShow(!show)}>New</Button>\n        <Modal isOpen={show}>\n          <button onClick={() => setShow(false)}>CLOSE</button>\n          <CreateRecipe />\n        </Modal>\n        <RecipeList />\n\n      </>\n    )\n}\n\n// @ts-ignore\nexport default withRouter(Dashboard)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { jsx, css } from '@emotion/core'\n\nimport { signOut } from '../../auth'\n\nimport { Button, Typography } from '@material-ui/core'\n\nconst Container = styled.nav`\n  position: fixed;\n  top: 0;\n  height: 60px;\n  width: 100%;\n  border-bottom: 2px solid coral;\n  background: white;\n  z-index: 10;\n`\nconst ContentWrapper = styled.div`\n  display: grid;\n  grid-template-columns: 200px 1fr 200px;\n  margin: 0 auto;\n  padding: 10px;\n`\n\nexport default function Header({ user }: any) {\n  async function handleLogoutClick() {\n    await signOut()\n  }\n  return (\n    <Container>\n      <ContentWrapper>\n        {user && user.displayName ? (\n          <Typography component=\"h1\" variant=\"h5\">\n            Hello {user.displayName}\n          </Typography>\n        ) : (\n            <Typography component=\"h1\" variant=\"h5\">\n              Welcome\n        </Typography>\n          )}\n\n        <div>\n\n        </div>\n        <div>\n          {user &&\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              onClick={handleLogoutClick}\n            >\n              Logout\n      </Button>\n          }\n        </div>\n      </ContentWrapper>\n    </Container>\n  )\n}","import React from 'react'\nimport * as firebase from 'firebase/app'\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles'\n// @ts-ignore\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { useAuth } from '../../auth'\n\nimport { UserContext } from '../../UserContext'\nimport {\n  CircularProgress,\n} from '@material-ui/core'\nimport Login from '../Login/Login'\nimport Signup from '../Signup/Signup'\nimport Dashboard from '../Dashboard/Dashboard'\nimport 'typeface-roboto'\nimport styled from '@emotion/styled'\nimport Header from '../Header/Header'\n\nconst theme = createMuiTheme()\n\nconst Container = styled.main`\n  width: auto;\n  margin: 0 5px;\n\n  @media (min-width: 420px) {\n    width: 95vw;\n    margin: 0 auto;\n  }\n`\n\nconst ContentWrapper = styled.div`\n  margin-top: 60px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 20px 30px;\n`\n\nfunction App(props: any) {\n  // @ts-ignore\n  const { initializing, user } = useAuth(firebase.auth())\n  console.log(window.location)\n\n  return initializing !== true ? (\n    <Container>\n      <ContentWrapper>\n        <Header user={user} />\n\n        <UserContext.Provider\n          value={{\n            initializing,\n            // @ts-ignore\n            user: user,\n          }}\n        >\n          <MuiThemeProvider theme={theme}>\n            <Router>\n              <Switch>\n                <Route exact path=\"whatoeato/\" component={Dashboard} />\n                <Route exact path=\"whatoeato/login\" component={Login} />\n                <Route exact path=\"whatoeato/signup\" component={Signup} />\n              </Switch>\n            </Router>\n          </MuiThemeProvider>\n        </UserContext.Provider>\n      </ContentWrapper>\n    </Container>\n  ) : (\n      <div id=\"loader\">\n        <CircularProgress />\n      </div>\n    )\n}\n\n// @ts-ignore\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport * as serviceWorker from './serviceWorker'\nimport './db'\n\nimport App from './components/App/App'\n\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}